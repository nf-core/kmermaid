{
    "$schema": "https://json-schema.org/draft-07/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/kmermaid/master/nextflow_schema.json",
    "title": "nf-core/kmermaid pipeline parameters",
    "description": "Compare DNA/RNA/protein sequences on k-mer content",
    "type": "object",
    "definitions": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "properties": {
                "input": {
                    "type": "string",
                    "description": "Path to fastq.gz files in quotes",
                    "fa_icon": "far fa-file-code"
                },
                "input_paths": {
                    "type": "string",
                    "description": "Test paths for input reads",
                    "hidden": true
                },
                "fasta_paths": {
                    "type": "string",
                    "description": "Test paths for fastas",
                    "hidden": true
                },
                "protein_fasta_paths": {
                    "type": "string",
                    "description": "Test paths for protein fastas",
                    "hidden": true
                },
                "read_pairs": {
                    "type": "string",
                    "description": "Path to Local or s3 directories containing R1,R2.fastq.gz files, separated by commas.",
                    "fa_icon": "far fa-file-code"
                },
                "read_singles": {
                    "type": "string",
                    "description": "Path to Local or s3 directories of single-end read files, separated by commas.",
                    "fa_icon": "far fa-file-code"
                },
                "csv_pairs": {
                    "type": "string",
                    "description": "CSV file with columns id, read1, read2 for each sample",
                    "fa_icon": "fas fa-file-csv"
                },
                "csv_singles": {
                    "type": "string",
                    "description": "CSV file with columns id, read1, for each sample",
                    "fa_icon": "fas fa-file-csv"
                },
                "fastas": {
                    "type": "string",
                    "description": "Path to FASTA sequence files. Can be semi-colon-separated.",
                    "fa_icon": "fas fa-file-code"
                },
                "protein_fastas": {
                    "type": "string",
                    "description": "Path to protein fasta inputs.",
                    "fa_icon": "fas fa-file-code"
                },
                "bam": {
                    "type": "string",
                    "description": "Path to bam input.",
                    "fa_icon": "fas fa-file-code"
                },
                "tenx_tgz": {
                    "type": "string",
                    "description": "Path to input tgz folder containing bam and bai files.",
                    "fa_icon": "fas fa-folder-open"
                },
                "sra": {
                    "type": "string",
                    "description": "SRR, ERR, SRP IDs representing a project. Only compatible with Nextflow 19.03-edge or greater",
                    "fa_icon": "far fa-file-code"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "fa_icon": "fas fa-envelope"
                },
                "outdir": {
                    "type": "string",
                    "description": "Path to the output directory where the results will be saved.",
                    "fa_icon": "fas fa-folder-open"
                }
            }
        },
        "k_mer_sketch_size_options": {
            "title": "K-mer Sketch size options",
            "type": "object",
            "description": "Sketch size options for sourmash compute",
            "default": "",
            "properties": {
                "sketch_num_hashes": {
                    "type": "integer",
                    "description": "Number of hashes to use for making the sketches. Mutually exclusive with --sketch_num_hashes_log2",
                    "fa_icon": "fas fa-barcode"
                },
                "sketch_num_hashes_log2": {
                    "type": "integer",
                    "description": "Which log2 sketch sizes to use. Multiple are separated by commas. Mutually exclusive with --sketch_num_hashes",
                    "fa_icon": "fas fa-barcode"
                },
                "sketch_scaled": {
                    "type": "integer",
                    "description": "Observe every 1/N hashes per sample, rather than a flat rate of N hashes per sample. This way, the number of hashes scales by the sequencing depth. Mutually exclusive with --sketch_scaled_log2",
                    "fa_icon": "fas fa-barcode"
                },
                "sketch_scaled_log2": {
                    "type": "integer",
                    "fa_icon": "fas fa-barcode",
                    "description": "Same as --sketch_scaled, but instead of specifying the true number of hashes, specify the power to take 2 to. Mutually exlusive with --sketch_scaled"
                }
            },
            "fa_icon": "fas fa-crop-alt"
        },
        "kmer_sketch_computation_options": {
            "title": "Kmer Sketch computation options",
            "type": "object",
            "description": "Options for kmer computation",
            "default": "",
            "properties": {
                "track_abundance": {
                    "type": "boolean",
                    "description": "Track abundance of each hashed k-mer, could be useful for cancer RNA-seq or ATAC-seq analyses",
                    "fa_icon": "fas fa-save"
                },
                "split_kmer": {
                    "type": "boolean",
                    "description": "If provided, use SKA to compute split k-mer sketches instead of sourmash to compute k-mer sketches",
                    "fa_icon": "fas fa-save"
                },
                "ksizes": {
                    "type": "string",
                    "description": "Which nucleotide k-mer sizes to use. Multiple are separated by commas",
                    "default": "'21,27,33,51'",
                    "fa_icon": "fas fa-database"
                },
                "molecules": {
                    "type": "string",
                    "description": "dna,protein,dayhoff",
                    "fa_icon": "fas fa-database"
                },
                "subsample": {
                    "type": "integer",
                    "fa_icon": "fas fa-barcode",
                    "description": "Integer value to subsample reads from input fastq files"
                },
                "sketch_singleton": {
                    "type": "string",
                    "description": "Compute one signature per entry in the FASTA file, which is useful when the file contains e.g. a transcript or genome per entry. This is not recommended for FASTQ files as it would compute one signature per read, and presumably one would want one signature per sequencing dataset",
                    "fa_icon": "fas fa-dice-one"
                }
            },
            "fa_icon": "fas fa-cogs"
        },
        "translate_options": {
            "title": "Translate sequences options",
            "type": "object",
            "fa_icon": "fas fa-language",
            "description": "Options to translate RNA-seq reads into protein-coding sequences .",
            "properties": {
                "reference_proteome_fasta": {
                    "type": "string",
                    "description": "Path to a well-curated fasta file of protein sequences. Used to filter for coding reads",
                    "fa_icon": "fas fa-file-code"
                },
                "translate_peptide_ksize": {
                    "type": "integer",
                    "description": "K-mer size to use for translating RNA into protein, which is good for 'protein'. If using dayhoff, suggest 15",
                    "default": 9,
                    "fa_icon": "fas fa-barcode"
                },
                "translate_peptide_molecule": {
                    "type": "string",
                    "description": "Which molecular encoding to use for translating.If your reference proteome is quite different from your species of interest, suggest using dayhoff ",
                    "fa_icon": "fas fa-database",
                    "default": "protein"
                },
                "translate_jaccard_threshold": {
                    "type": "string",
                    "fa_icon": "fas fa-code-branch",
                    "description": "Minimum fraction of overlapping translated k-mers from the read to match to the reference.",
                    "default": 0.95
                },
                "bloomfilter_tablesize": {
                    "type": "integer",
                    "description": "Maximum table size for bloom filter creation",
                    "fa_icon": "fas fa-code-branch"
                },
                "save_translate_csv": {
                    "type": "string",
                    "description": "Path to save the coding scores as a csv",
                    "default": "False"
                },
                "save_translate_json": {
                    "type": "string",
                    "description": "Path to save summarization of coding/\"     \"noncoding/other categorizations, the \"     \"min/max/mean/median/stddev of Jaccard scores, and other as a json",
                    "default": "False"
                }
            }
        },
        "ribosomal_rna_removal_options": {
            "title": "Ribosomal RNA Removal options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "properties": {
                "remove_ribo_rna": {
                    "type": "boolean",
                    "description": "If on, removes ribosomal RNA",
                    "fa_icon": "fas fa-fast-forward"
                },
                "save_non_rrna_reads": {
                    "type": "boolean",
                    "fa_icon": "fas fa-barcode",
                    "description": "Save non ribosomal rna reads if true"
                },
                "rrna_database_manifest": {
                    "type": "string",
                    "fa_icon": "fas fa-database",
                    "description": "Path to rrna database manifest txt file"
                }
            },
            "description": "Remove ribosomal RNA with SortMeRNA"
        },
        "bam_options": {
            "title": "bam options",
            "type": "object",
            "fa_icon": "fas fa-map-signs",
            "description": "Options to adjust parameters and filtering criteria for read alignments.",
            "properties": {
                "tenx_min_umi_per_cell": {
                    "type": "integer",
                    "description": "A barcode is only considered a valid barcode read and its signature is written if number of umis are greater than tenx_min_umi_per_cell",
                    "fa_icon": "fas fa-percentage"
                },
                "barcodes_file": {
                    "type": "string",
                    "description": "For bam files, Optional absolute path to a .tsv barcodes file if the input is unfiltered 10x bam file",
                    "fa_icon": "fas fa-file-csv"
                },
                "rename_10x_barcodes": {
                    "type": "string",
                    "description": "For bam files, Optional absolute path to a .tsv Tab-separated file mapping 10x barcode name to new name, e.g. with channel or cell annotation label",
                    "fa_icon": "fas fa-file-csv"
                },
                "write_barcode_meta_csv": {
                    "type": "string",
                    "description": "For bam files, Csv file name relative to outdir/barcode_metadata to write number of reads and number of umis per barcode. This csv file is empty with just header when the tenx_min_umi_per_cell is zero i.e Reads and umis per barcode are calculated only when the barcodes are filtered based on tenx_min_umi_per_cell",
                    "fa_icon": "fa-file-csv"
                },
                "save_fastas": {
                    "type": "string",
                    "description": "Path to single barcode save the fastas inside the output directory where the results will be saved.",
                    "fa_icon": "fas fa-folder-open"
                },
                "tenx_tags": {
                    "type": "string",
                    "description": "10x sam tags",
                    "fa_icon": "fas fa-database"
                },
                "tenx_cell_barcode_pattern": {
                    "type": "string",
                    "description": "10x Cell pattern",
                    "fa_icon": "fas fa-database"
                },
                "tenx_molecular_barcode_pattern": {
                    "type": "string",
                    "description": "10x UMI pattern",
                    "fa_icon": "fas fa-database"
                }
            }
        },
        "process_skipping_options": {
            "title": "Process skipping options",
            "type": "object",
            "fa_icon": "fas fa-fast-forward",
            "description": "Options to skip various steps within the workflow.",
            "properties": {
                "skip_trimming": {
                    "type": "boolean",
                    "description": "Skip fastp trimming of reads",
                    "fa_icon": "fas fa-fast-forward"
                },
                "skip_compute": {
                    "type": "boolean",
                    "description": "Skip sourmash compute.",
                    "fa_icon": "fas fa-fast-forward"
                },
                "skip_compare": {
                    "type": "boolean",
                    "description": "Skip sourmash compare.",
                    "fa_icon": "fas fa-fast-forward"
                },
                "skip_sig_merge": {
                    "type": "boolean",
                    "description": "Skip merging aligned+unaligned reads per cell (keep aligned/unaligned separate)"
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "description": "Skip MultiQC.",
                    "fa_icon": "fas fa-fast-forward"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "hostnames": {
                    "type": "string",
                    "description": "Institutional configs hostname.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "max_job_request_options": {
            "title": "Max job request options",
            "type": "object",
            "fa_icon": "fab fa-acquisitions-incorporated",
            "description": "Set the top limit for requested resources for any single job.",
            "help_text": "If you are running on a smaller system, a pipeline step requesting more resources than are available may cause the Nextflow to stop the run with an error. These options allow you to cap the maximum resources requested by any single job so that the pipeline will run on your system.\n\nNote that you can not _increase_ the resources requested by any job using these options. For that you will need your own configuration file. See [the nf-core website](https://nf-co.re/usage/configuration) for details.",
            "properties": {
                "max_cpus": {
                    "type": "integer",
                    "description": "Maximum number of CPUs that can be requested for any single job.",
                    "default": 16,
                    "fa_icon": "fas fa-microchip",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the CPU requirement for each process. Should be an integer e.g. `--max_cpus 1`"
                },
                "max_memory": {
                    "type": "string",
                    "description": "Maximum amount of memory that can be requested for any single job.",
                    "default": "128.GB",
                    "fa_icon": "fas fa-memory",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the memory requirement for each process. Should be a string in the format integer-unit e.g. `--max_memory '8.GB'`"
                },
                "max_time": {
                    "type": "string",
                    "description": "Maximum amount of time that can be requested for any single job.",
                    "default": "240.h",
                    "fa_icon": "far fa-clock",
                    "hidden": true,
                    "help_text": "Use to set an upper-limit for the time requirement for each process. Should be a string in the format integer-unit e.g. `--max_time '2.h'`"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "help": {
                    "type": "boolean",
                    "description": "Display help text.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": [
                        "symlink",
                        "rellink",
                        "link",
                        "copy",
                        "copyNoFollow",
                        "move"
                    ],
                    "hidden": true
                },
                "name": {
                    "type": "string",
                    "description": "Workflow name.",
                    "fa_icon": "fas fa-address-card",
                    "help_text": "A custom name for the pipeline run. Unlike the core nextflow `-name` option with one hyphen this parameter can be reused multiple times, for example if using `-resume`. Passed through to steps such as MultiQC and used for things like report filenames and titles.",
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "multiqc_config": {
                    "type": "string",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "tracedir": {
                    "type": "string",
                    "description": "Directory to keep pipeline Nextflow logs and reports.",
                    "default": "${params.outdir}/pipeline_info",
                    "fa_icon": "fas fa-cogs",
                    "hidden": true
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/definitions/input_output_options"
        },
        {
            "$ref": "#/definitions/k_mer_sketch_size_options"
        },
        {
            "$ref": "#/definitions/kmer_sketch_computation_options"
        },
        {
            "$ref": "#/definitions/translate_options"
        },
        {
            "$ref": "#/definitions/ribosomal_rna_removal_options"
        },
        {
            "$ref": "#/definitions/bam_options"
        },
        {
            "$ref": "#/definitions/process_skipping_options"
        },
        {
            "$ref": "#/definitions/institutional_config_options"
        },
        {
            "$ref": "#/definitions/max_job_request_options"
        },
        {
            "$ref": "#/definitions/generic_options"
        }
    ]
}